[배열과 객체]
1. 배열 특징
- 동일한 타입의 값을 연속으로 할당
	- 배열은 여러개의 값을 넣을 수 있음
	- 동일한 타입의 값이 연속되어 할당되어 있는 것
- 1차원부터 n차원까지 선언이 가능
	- 1차원 : 임의의 타입이 0부터 n까지 할당
	- 2차원 : 행과 열로 할당(행,열)
	- 3차원 : 1차원 여러개 할당(면, 행, 열)
- 빠르게 자료를 처리하는데 유용

2. 배열 선언
- 배열을 사용하기 위해서는 배열을 선언해야 함
- 배열의 선언은 대괄호 []
- 초기값 지정은 중괄호 {}
- 초기값을 지정한 것으로 배열의 크기가 결정
- 배열의 선언:
	- 타입[] 변수 = { 초기값1, 초기값2, ... };
	- 타입[] 변수 = new 타입[길이] { 초기값1, 초기값2, ... };
	- 타입[] 변수 = new 타입[길이];

3. 배열의 초기값
-  배열을 선언하고 초기값을 지정하지 않았을 때
	- 정수형 : int : 0, long : 0L char : '\u0000'
	- 실수형 : float : 0.0f, double : 0.0
	- 논리형 : boolean : false
	- 참조형 : class : null, interface : null
	
	
   
## 11. 객체
- 클래스가 생성되어 만들어 진 것
- new를 통해서 객체가 생성
- 문자열(String)은 new를 하지 않고 값을 할당해도 문자열 객체가 생성된다.
- 클래스: 객체의 틀(원형), DNA
	- 예: 사람(클래스)
		> 사람 -> 홍길동(객체), 이순신(객체)
		> 객체는 객체의 원형의 성질을 가지고 있는만 서로 독립적인 개체
		> 사람이고 하는 특징을 가지고 있다.
		> 사람의 특징:
			-> 속성(필드) : 얼굴, 손, 다리, 키, 몸무게
			-> 행위(메소드) : 걷는다, 달린다, 말한다, 노래한다, 본다
	- 예: 문자열(String)
		> 속성: 변수, 문자들, 크기
		> 행위: 함수, 같은가(equals), 길이(length)  
		> String hello
			-> 길이? : hello.length()
			-> 같은가? : hello.equals("문자열")
			-> 비어있는가? : hello.isEmpty();
	- 객체생성(실체)
		> 객체가 가지고 있는 속성이나 메소드를 사용하기 위해서는 접근연산자 점(.)을 사용해서 기술한다.
			객체이름 = new 클래스이름();
			객체이름.속성;
			객체이름.메소드();
		> String hello = new String("hello");
			hello.length();
			hello.equals("hello");
	